AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'

# Parameters:
  # DomainName:
  #   Type: String
  #   Default: ssw.vaines.org

Resources:
  # S3 Bucket for Static Website Hosting
  FrontendBucket:
    Type: 'AWS::S3::Bucket'

  FrontendBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Id: CloudfrontPolicy
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              CanonicalUser: !GetAtt CloudFrontOriginAccessIdentity.S3CanonicalUserId
            Action: 's3:GetObject'
            Resource: !Sub
              - 'arn:aws:s3:::${Bucket}/*'
              - Bucket: !Ref FrontendBucket
      Bucket: !Ref FrontendBucket

  # DynamoDB Table for Data Storage
  DynamoDBTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TableName: !Sub "${AWS::StackName}-data"

  # CreateDataFunction:
  #   Type: AWS::Serverless::Function
  #   Properties:
  #     CodeUri: ../lambda/createData/
  #     Handler: main.handler
  #     Runtime: nodejs18.x
  #     Architectures:
  #       - arm64
  #     Events:
  #       Read:
  #         Type: Api
  #         Properties:
  #           Path: /api/create
  #           Method: POST

  ReadDataFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../lambda/getData/
      Handler: main.handler
      Runtime: nodejs18.x
      Architectures:
        - arm64
      Events:
        Read:
          Type: Api
          Properties:
            Path: /api/read
            Method: get

  # UpdateDataFunction:
  #   Type: AWS::Serverless::Function
  #   Properties:
  #     CodeUri: ../lambda/updateData/
  #     Handler: main.handler
  #     Runtime: nodejs18.x
  #     Architectures:
  #       - arm64
  #     Events:
  #       Read:
  #         Type: Api
  #         Properties:
  #           Path: /api/update
  #           Method: PUT

  # DeleteDataFunction:
  #   Type: AWS::Serverless::Function
  #   Properties:
  #     CodeUri: ../lambda/deleteData/
  #     Handler: main.handler
  #     Runtime: nodejs18.x
  #     Architectures:
  #       - arm64
  #     Events:
  #       Read:
  #         Type: Api
  #         Properties:
  #           Path: /api/delete
  #           Method: DELETE

# WebCertificate:
#     Type: AWS::CertificateManager::Certificate
#     Properties:
#       DomainName: !Ref DomainName
#       SubjectAlternativeNames:
#         - !Sub 'www.${DomainName}'
#       ValidationMethod: DNS
#       DomainValidationOptions:
#         - DomainName: !Ref DomainName
#           HostedZoneId: !Ref HostedZoneId
#         - DomainName: !Sub 'www.${DomainName}'
#           HostedZoneId: !Ref HostedZoneId

  CloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: CloudFront access identity

  CloudFrontDistribution:
    Type: 'AWS::CloudFront::Distribution'
    Properties:
      DistributionConfig:
        Enabled: true
        DefaultRootObject: index.html
        # Aliases:
        #   - !Ref DomainName
        Origins:
          - Id: WebsiteBucket
            DomainName: !GetAtt FrontendBucket.RegionalDomainName
            S3OriginConfig:
              OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}"
          - Id: BackendApi
            DomainName: !Sub "${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com"
            OriginPath: "/Prod"
            CustomOriginConfig:
              OriginProtocolPolicy: https-only
        DefaultCacheBehavior:
          TargetOriginId: WebsiteBucket
          ViewerProtocolPolicy: redirect-to-https
          ForwardedValues:
            QueryString: true
        CacheBehaviors:
          - TargetOriginId: BackendApi
            PathPattern: "api/*"
            DefaultTTL: 0
            MinTTL: 0
            MaxTTL: 0
            ViewerProtocolPolicy: https-only
            AllowedMethods: [GET,HEAD, OPTIONS]
            ForwardedValues:
              QueryString: true

Outputs:
  WebsiteURL:
    Value: !GetAtt CloudFrontDistribution.DomainName
  FrontendBucketName:
    Value: !Ref FrontendBucket
